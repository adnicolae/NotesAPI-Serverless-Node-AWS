# NOTE: update this with your service name
service: sls-notes-app-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-1

  environment:
    TABLE_NAME: notes
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}

  # Define permission policies for the Lambda function
  # Allow access to dynamodb tables from the us-east-1 region
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # create: POST /notes
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  # GET /notes/{id}
  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  # GET /notes
  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
  # PUT /notes/{id}
  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
  # DELETE /notes/{id}
  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true,
          authorizer: aws_iam
  # POST /billing
  billing:
    handler: billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true,
          authorizer: aws_iam